// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: game/game.proto

package game

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{0}
}

// RGameState is the whole state of the game.
type RGameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// game status, e.g. inplay
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// current player name
	Playing string `protobuf:"bytes,2,opt,name=playing,proto3" json:"playing,omitempty"`
	// name of the winner, if in won state
	Winner string `protobuf:"bytes,3,opt,name=winner,proto3" json:"winner,omitempty"`
	// top level turn count
	TurnNumber int32 `protobuf:"varint,4,opt,name=turnNumber,proto3" json:"turnNumber,omitempty"`
	// custom JSON data, to be shown to everyone
	Global []byte `protobuf:"bytes,9,opt,name=global,proto3" json:"global,omitempty"`
	// per player
	Players []*RPlayerState `protobuf:"bytes,5,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *RGameState) Reset() {
	*x = RGameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RGameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RGameState) ProtoMessage() {}

func (x *RGameState) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RGameState.ProtoReflect.Descriptor instead.
func (*RGameState) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{1}
}

func (x *RGameState) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RGameState) GetPlaying() string {
	if x != nil {
		return x.Playing
	}
	return ""
}

func (x *RGameState) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

func (x *RGameState) GetTurnNumber() int32 {
	if x != nil {
		return x.TurnNumber
	}
	return 0
}

func (x *RGameState) GetGlobal() []byte {
	if x != nil {
		return x.Global
	}
	return nil
}

func (x *RGameState) GetPlayers() []*RPlayerState {
	if x != nil {
		return x.Players
	}
	return nil
}

// RPlayer is for the current state of some player.
type RPlayerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Colour string `protobuf:"bytes,2,opt,name=colour,proto3" json:"colour,omitempty"`
	// turn is the new turn state, and possibiy a whole new turn.
	Turn *RTurnState `protobuf:"bytes,3,opt,name=turn,proto3" json:"turn,omitempty"`
	// custom JSON data, just for this player
	Private []byte `protobuf:"bytes,9,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *RPlayerState) Reset() {
	*x = RPlayerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPlayerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPlayerState) ProtoMessage() {}

func (x *RPlayerState) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPlayerState.ProtoReflect.Descriptor instead.
func (*RPlayerState) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{2}
}

func (x *RPlayerState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RPlayerState) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *RPlayerState) GetTurn() *RTurnState {
	if x != nil {
		return x.Turn
	}
	return nil
}

func (x *RPlayerState) GetPrivate() []byte {
	if x != nil {
		return x.Private
	}
	return nil
}

// RTurnState is the part of the game state that relates an active turn.
type RTurnState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// turn number - is the same as in the global state, that's not right.
	Number int32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	// what the player can do
	Can []string `protobuf:"bytes,3,rep,name=can,proto3" json:"can,omitempty"`
	// what the player must do, before the turn can end
	Must []string `protobuf:"bytes,4,rep,name=must,proto3" json:"must,omitempty"`
	// custom JSON data that just relates to the current turn
	Custom []byte `protobuf:"bytes,9,opt,name=custom,proto3" json:"custom,omitempty"`
}

func (x *RTurnState) Reset() {
	*x = RTurnState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RTurnState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTurnState) ProtoMessage() {}

func (x *RTurnState) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTurnState.ProtoReflect.Descriptor instead.
func (*RTurnState) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{3}
}

func (x *RTurnState) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *RTurnState) GetCan() []string {
	if x != nil {
		return x.Can
	}
	return nil
}

func (x *RTurnState) GetMust() []string {
	if x != nil {
		return x.Must
	}
	return nil
}

func (x *RTurnState) GetCustom() []byte {
	if x != nil {
		return x.Custom
	}
	return nil
}

// RChange is a change in the game state, which should be sent to erveryone.
type RChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Who   string `protobuf:"bytes,1,opt,name=who,proto3" json:"who,omitempty"`
	What  string `protobuf:"bytes,2,opt,name=what,proto3" json:"what,omitempty"`
	Where string `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
}

func (x *RChange) Reset() {
	*x = RChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RChange) ProtoMessage() {}

func (x *RChange) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RChange.ProtoReflect.Descriptor instead.
func (*RChange) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{4}
}

func (x *RChange) GetWho() string {
	if x != nil {
		return x.Who
	}
	return ""
}

func (x *RChange) GetWhat() string {
	if x != nil {
		return x.What
	}
	return ""
}

func (x *RChange) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type RLoadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RLoadRequest) Reset() {
	*x = RLoadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLoadRequest) ProtoMessage() {}

func (x *RLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLoadRequest.ProtoReflect.Descriptor instead.
func (*RLoadRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{5}
}

func (x *RLoadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RLoadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *RGameState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *RLoadResponse) Reset() {
	*x = RLoadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RLoadResponse) ProtoMessage() {}

func (x *RLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RLoadResponse.ProtoReflect.Descriptor instead.
func (*RLoadResponse) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{6}
}

func (x *RLoadResponse) GetState() *RGameState {
	if x != nil {
		return x.State
	}
	return nil
}

type RInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// custom JSON options
	Options []byte `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *RInitRequest) Reset() {
	*x = RInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RInitRequest) ProtoMessage() {}

func (x *RInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RInitRequest.ProtoReflect.Descriptor instead.
func (*RInitRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{7}
}

func (x *RInitRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RInitRequest) GetOptions() []byte {
	if x != nil {
		return x.Options
	}
	return nil
}

type RInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *RGameState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *RInitResponse) Reset() {
	*x = RInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RInitResponse) ProtoMessage() {}

func (x *RInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RInitResponse.ProtoReflect.Descriptor instead.
func (*RInitResponse) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{8}
}

func (x *RInitResponse) GetState() *RGameState {
	if x != nil {
		return x.State
	}
	return nil
}

type RAddPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Colour string `protobuf:"bytes,2,opt,name=colour,proto3" json:"colour,omitempty"`
	// custom JSON options
	Options []byte `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *RAddPlayerRequest) Reset() {
	*x = RAddPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RAddPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RAddPlayerRequest) ProtoMessage() {}

func (x *RAddPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RAddPlayerRequest.ProtoReflect.Descriptor instead.
func (*RAddPlayerRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{9}
}

func (x *RAddPlayerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RAddPlayerRequest) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *RAddPlayerRequest) GetOptions() []byte {
	if x != nil {
		return x.Options
	}
	return nil
}

type RAddPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *RGameState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *RAddPlayerResponse) Reset() {
	*x = RAddPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RAddPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RAddPlayerResponse) ProtoMessage() {}

func (x *RAddPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RAddPlayerResponse.ProtoReflect.Descriptor instead.
func (*RAddPlayerResponse) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{10}
}

func (x *RAddPlayerResponse) GetState() *RGameState {
	if x != nil {
		return x.State
	}
	return nil
}

type RStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RStartRequest) Reset() {
	*x = RStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RStartRequest) ProtoMessage() {}

func (x *RStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RStartRequest.ProtoReflect.Descriptor instead.
func (*RStartRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{11}
}

type RStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *RGameState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *RStartResponse) Reset() {
	*x = RStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RStartResponse) ProtoMessage() {}

func (x *RStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RStartResponse.ProtoReflect.Descriptor instead.
func (*RStartResponse) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{12}
}

func (x *RStartResponse) GetState() *RGameState {
	if x != nil {
		return x.State
	}
	return nil
}

// RPlayRequest is make a move.
type RPlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// player ID, must be server set.
	Player string `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	// command, is in CommandString format
	Command string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	// options for the command
	Options string `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *RPlayRequest) Reset() {
	*x = RPlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPlayRequest) ProtoMessage() {}

func (x *RPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPlayRequest.ProtoReflect.Descriptor instead.
func (*RPlayRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{13}
}

func (x *RPlayRequest) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *RPlayRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *RPlayRequest) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

// RPlayResponse is result of a move.
type RPlayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// response is direct response
	Response []byte `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	// news is changes to be broadcast
	News []*RChange `protobuf:"bytes,2,rep,name=news,proto3" json:"news,omitempty"`
	// state is the entire game state.
	State *RGameState `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *RPlayResponse) Reset() {
	*x = RPlayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPlayResponse) ProtoMessage() {}

func (x *RPlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPlayResponse.ProtoReflect.Descriptor instead.
func (*RPlayResponse) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{14}
}

func (x *RPlayResponse) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RPlayResponse) GetNews() []*RChange {
	if x != nil {
		return x.News
	}
	return nil
}

func (x *RPlayResponse) GetState() *RGameState {
	if x != nil {
		return x.State
	}
	return nil
}

// RDestroyRequest takes out the game instance entirely, and also shuts down
// the process.
type RDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RDestroyRequest) Reset() {
	*x = RDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RDestroyRequest) ProtoMessage() {}

func (x *RDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RDestroyRequest.ProtoReflect.Descriptor instead.
func (*RDestroyRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{15}
}

type RDestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RDestroyResponse) Reset() {
	*x = RDestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RDestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RDestroyResponse) ProtoMessage() {}

func (x *RDestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RDestroyResponse.ProtoReflect.Descriptor instead.
func (*RDestroyResponse) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{16}
}

var File_game_game_proto protoreflect.FileDescriptor

var file_game_game_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x52, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x75, 0x72,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x75, 0x72, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22,
	0x7a, 0x0a, 0x0c, 0x52, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x74,
	0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x52, 0x54, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x62, 0x0a, 0x0a, 0x52,
	0x54, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x75, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x75, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x22,
	0x45, 0x0a, 0x07, 0x52, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x68,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x77, 0x68, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x77, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x68, 0x61, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x22, 0x1e, 0x0a, 0x0c, 0x52, 0x4c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x0d, 0x52, 0x4c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x38, 0x0a, 0x0c, 0x52, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x37, 0x0a, 0x0d, 0x52, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x52, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x59, 0x0a, 0x11, 0x52, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c,
	0x6f, 0x75, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3c, 0x0a,
	0x12, 0x52, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x52,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x0e,
	0x52, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5a, 0x0a, 0x0c, 0x52, 0x50, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x76, 0x0a, 0x0d, 0x52, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x04, 0x6e, 0x65, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x6e, 0x65,
	0x77, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a,
	0x10, 0x52, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xcb, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2f,
	0x0a, 0x04, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x4c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x52, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52,
	0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x52, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x17, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x41,
	0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x52, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x12, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x52, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x12, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x6e,
	0x64, 0x65, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f,
	0x67, 0x6f, 0x67, 0x6f, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_game_game_proto_rawDescOnce sync.Once
	file_game_game_proto_rawDescData = file_game_game_proto_rawDesc
)

func file_game_game_proto_rawDescGZIP() []byte {
	file_game_game_proto_rawDescOnce.Do(func() {
		file_game_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_game_proto_rawDescData)
	})
	return file_game_game_proto_rawDescData
}

var file_game_game_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_game_game_proto_goTypes = []interface{}{
	(*Empty)(nil),              // 0: game.Empty
	(*RGameState)(nil),         // 1: game.RGameState
	(*RPlayerState)(nil),       // 2: game.RPlayerState
	(*RTurnState)(nil),         // 3: game.RTurnState
	(*RChange)(nil),            // 4: game.RChange
	(*RLoadRequest)(nil),       // 5: game.RLoadRequest
	(*RLoadResponse)(nil),      // 6: game.RLoadResponse
	(*RInitRequest)(nil),       // 7: game.RInitRequest
	(*RInitResponse)(nil),      // 8: game.RInitResponse
	(*RAddPlayerRequest)(nil),  // 9: game.RAddPlayerRequest
	(*RAddPlayerResponse)(nil), // 10: game.RAddPlayerResponse
	(*RStartRequest)(nil),      // 11: game.RStartRequest
	(*RStartResponse)(nil),     // 12: game.RStartResponse
	(*RPlayRequest)(nil),       // 13: game.RPlayRequest
	(*RPlayResponse)(nil),      // 14: game.RPlayResponse
	(*RDestroyRequest)(nil),    // 15: game.RDestroyRequest
	(*RDestroyResponse)(nil),   // 16: game.RDestroyResponse
}
var file_game_game_proto_depIdxs = []int32{
	2,  // 0: game.RGameState.players:type_name -> game.RPlayerState
	3,  // 1: game.RPlayerState.turn:type_name -> game.RTurnState
	1,  // 2: game.RLoadResponse.state:type_name -> game.RGameState
	1,  // 3: game.RInitResponse.state:type_name -> game.RGameState
	1,  // 4: game.RAddPlayerResponse.state:type_name -> game.RGameState
	1,  // 5: game.RStartResponse.state:type_name -> game.RGameState
	4,  // 6: game.RPlayResponse.news:type_name -> game.RChange
	1,  // 7: game.RPlayResponse.state:type_name -> game.RGameState
	5,  // 8: game.Instance.Load:input_type -> game.RLoadRequest
	7,  // 9: game.Instance.Init:input_type -> game.RInitRequest
	9,  // 10: game.Instance.AddPlayer:input_type -> game.RAddPlayerRequest
	11, // 11: game.Instance.Start:input_type -> game.RStartRequest
	13, // 12: game.Instance.Play:input_type -> game.RPlayRequest
	15, // 13: game.Instance.Destroy:input_type -> game.RDestroyRequest
	6,  // 14: game.Instance.Load:output_type -> game.RLoadResponse
	8,  // 15: game.Instance.Init:output_type -> game.RInitResponse
	10, // 16: game.Instance.AddPlayer:output_type -> game.RAddPlayerResponse
	12, // 17: game.Instance.Start:output_type -> game.RStartResponse
	14, // 18: game.Instance.Play:output_type -> game.RPlayResponse
	16, // 19: game.Instance.Destroy:output_type -> game.RDestroyResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_game_game_proto_init() }
func file_game_game_proto_init() {
	if File_game_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RGameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPlayerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RTurnState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RLoadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RLoadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RAddPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RAddPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPlayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RDestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_game_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_game_game_proto_goTypes,
		DependencyIndexes: file_game_game_proto_depIdxs,
		MessageInfos:      file_game_game_proto_msgTypes,
	}.Build()
	File_game_game_proto = out.File
	file_game_game_proto_rawDesc = nil
	file_game_game_proto_goTypes = nil
	file_game_game_proto_depIdxs = nil
}
